

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jul 09 00:17:07 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	12F508
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=ENTRY,delta=2
     5                           	psect	cinit,global,class=ENTRY,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	jmp_tab,global,class=ENTRY,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x1C,4
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 29/04/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC12F508 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59                           
    60                           	psect	idataBANK0
    61  00C                     __pidataBANK0:
    62                           
    63                           ;initializer for _flg1
    64  00C  0806               	retlw	6
    65  00D  0800               	retlw	0
    66  0006                     _GPIObits	set	6
    67  0000                     _OPTION	set	0
    68  0006                     _TRISGPIO	set	6
    69                           
    70                           	psect	cinit
    71  001                     start_initialization:	
    72                           ; #config settings
    73                           
    74  001                     __initialization:
    75                           
    76                           ; Initialize objects allocated to BANK0
    77  001  090C               	fcall	__pidataBANK0	;fetch initializer
    78  002  0036               	movwf	__pdataBANK0& (0+31)
    79  003  090D               	fcall	__pidataBANK0+1	;fetch initializer
    80  004  0037               	movwf	(__pdataBANK0+1)& (0+31)
    81                           
    82                           ; Clear objects allocated to BANK0
    83  005  0074               	clrf	__pbssBANK0& (0+31)
    84  006  0075               	clrf	(__pbssBANK0+1)& (0+31)
    85  007                     end_of_initialization:	
    86                           ;End of C runtime variable initialization code
    87                           
    88  007                     __end_of__initialization:
    89  007  0064               	clrf	4
    90  008  0B19               	ljmp	_main	;jump to C main() function
    91                           
    92                           	psect	bssBANK0
    93  014                     __pbssBANK0:
    94  014                     _flg:
    95  014                     	ds	2
    96                           
    97                           	psect	dataBANK0
    98  016                     __pdataBANK0:
    99  016                     _flg1:
   100  016                     	ds	2
   101                           
   102                           	psect	cstackCOMMON
   103  000                     __pcstackCOMMON:
   104  000                     ??_second_pulse:
   105  000                     ??_first_pulse:	
   106                           ; 1 bytes @ 0x0
   107                           
   108                           
   109                           	psect	cstackBANK0
   110  007                     __pcstackBANK0:	
   111                           ; 1 bytes @ 0x0
   112                           
   113  007                     ?_startmotor:
   114  007                     ??_startmotor:	
   115                           ; 1 bytes @ 0x0
   116                           
   117  007                     ?_second_pulse:	
   118                           ; 1 bytes @ 0x0
   119                           
   120  007                     ?_first_pulse:	
   121                           ; 1 bytes @ 0x0
   122                           
   123  007                     ?_main:	
   124                           ; 1 bytes @ 0x0
   125                           
   126  007                     first_pulse@i:	
   127                           ; 1 bytes @ 0x0
   128                           
   129  007                     second_pulse@i:	
   130                           ; 2 bytes @ 0x0
   131                           
   132                           
   133                           ; 2 bytes @ 0x0
   134  007                     	ds	2
   135  009                     first_pulse@i_77:
   136  009                     second_pulse@i_80:	
   137                           ; 2 bytes @ 0x2
   138                           
   139                           
   140                           ; 2 bytes @ 0x2
   141  009                     	ds	2
   142  00B                     ??_main:
   143                           
   144                           ; 1 bytes @ 0x4
   145  00B                     	ds	3
   146  00E                     main@i:
   147                           
   148                           ; 2 bytes @ 0x7
   149  00E                     	ds	2
   150  010                     main@i_73:
   151                           
   152                           ; 2 bytes @ 0x9
   153  010                     	ds	2
   154  012                     main@i_74:
   155                           
   156                           ; 2 bytes @ 0xB
   157  012                     	ds	2
   158                           
   159                           	psect	maintext
   160  119                     __pmaintext:	
   161 ;;
   162 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   163 ;;
   164 ;; *************** function _main *****************
   165 ;; Defined at:
   166 ;;		line 16 in file "newmain.c"
   167 ;; Parameters:    Size  Location     Type
   168 ;;		None
   169 ;; Auto vars:     Size  Location     Type
   170 ;;  i               2   11[BANK0 ] int 
   171 ;;  i               2    9[BANK0 ] int 
   172 ;;  i               2    7[BANK0 ] int 
   173 ;; Return value:  Size  Location     Type
   174 ;;                  1   22[None  ] void 
   175 ;; Registers used:
   176 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, btemp+2, btemp+3, pclath, cstack
   177 ;; Tracked objects:
   178 ;;		On entry : B00/0
   179 ;;		On exit  : 0/0
   180 ;;		Unchanged: 0/0
   181 ;; Data sizes:     COMMON   BANK0
   182 ;;      Params:         0       0
   183 ;;      Locals:         0       6
   184 ;;      Temps:          0       3
   185 ;;      Totals:         0       9
   186 ;;Total ram usage:        9 bytes
   187 ;; Hardware stack levels required when called: 1
   188 ;; This function calls:
   189 ;;		_first_pulse
   190 ;;		_second_pulse
   191 ;;		_startmotor
   192 ;; This function is called by:
   193 ;;		Startup code after reset
   194 ;; This function uses a non-reentrant model
   195 ;;
   196                           
   197                           
   198                           ;psect for function _main
   199  119                     _main:
   200  119                     l828:	
   201                           ;incstack = 0
   202                           ; Regs used in _main: [wreg-fsr0h+status,2-btemp+3+pclath+cstack]
   203                           
   204                           
   205                           ;newmain.c: 24:         if(GPIObits.GP2 == 1){
   206  119  0C3C               	movlw	60
   207  11A  0006               	tris	6
   208                           
   209                           ;newmain.c: 25:             flg = flg | 0b10000000;
   210  11B  0CC0               	movlw	192
   211  11C  0002               	option
   212  11D                     l830:
   213                           
   214                           ;newmain.c: 28:         }
   215  11D  0426               	bcf	6,1	;volatile
   216  11E                     l832:
   217                           
   218                           ;newmain.c: 30:             flg = flg & 0b01111111;
   219  11E  0766               	btfss	6,3	;volatile
   220  11F  0B21               	goto	u311
   221  120  0B22               	goto	u310
   222  121                     u311:
   223  121  0B2B               	goto	l840
   224  122                     u310:
   225  122                     l834:
   226  122  0646               	btfsc	6,2	;volatile
   227  123  0B25               	goto	u321
   228  124  0B26               	goto	u320
   229  125                     u321:
   230  125  0B2B               	goto	l840
   231  126                     u320:
   232  126                     l836:
   233  126  0696               	btfsc	_flg1,4
   234  127  0B29               	goto	u331
   235  128  0B2A               	goto	u330
   236  129                     u331:
   237  129  0B2B               	goto	l840
   238  12A                     u330:
   239  12A                     l838:
   240                           
   241                           ;newmain.c: 31:         }
   242  12A  0909               	fcall	entry__startmotor
   243  12B                     l840:
   244                           
   245                           ;newmain.c: 33: 
   246  12B  0686               	btfsc	6,4	;volatile
   247  12C  0B2E               	goto	u341
   248  12D  0B2F               	goto	u340
   249  12E                     u341:
   250  12E  0B42               	goto	l848
   251  12F                     u340:
   252  12F                     l842:
   253                           
   254                           ;newmain.c: 34:         if( flg1 & 0b00010000){
   255  12F  0CBF               	movlw	191
   256  130  003C               	movwf	btemp
   257  131  007D               	clrf	btemp+1
   258  132  021C               	movf	wtemp0,w
   259  133  0154               	andwf	_flg,w
   260  134  0034               	movwf	_flg
   261  135  021D               	movf	wtemp0+1,w
   262  136  0155               	andwf	_flg+1,w
   263  137  0035               	movwf	_flg+1
   264  138                     l844:
   265                           
   266                           ;newmain.c: 35:             for(int i=0;i<100;i++){
   267  138  0426               	bcf	6,1	;volatile
   268  139                     l846:
   269                           
   270                           ;newmain.c: 36:                 second_pulse();
   271  139  0C82               	movlw	130
   272  13A  002C               	movwf	??_main+1
   273  13B  0CDD               	movlw	221
   274  13C  002B               	movwf	??_main
   275  13D                     u437:
   276  13D  02EB               	decfsz	??_main,f
   277  13E  0B3D               	goto	u437
   278  13F  02EC               	decfsz	??_main+1,f
   279  140  0B3D               	goto	u437
   280  141  0B42               	nop2
   281  142                     l848:
   282                           
   283                           ;newmain.c: 39:             for(int i=0;i<250;i++){
   284  142  07D4               	btfss	_flg,6
   285  143  0B45               	goto	u351
   286  144  0B46               	goto	u350
   287  145                     u351:
   288  145  0B6B               	goto	l860
   289  146                     u350:
   290  146                     l850:
   291  146  07A6               	btfss	6,5	;volatile
   292  147  0B49               	goto	u361
   293  148  0B4A               	goto	u360
   294  149                     u361:
   295  149  0B6B               	goto	l860
   296  14A                     u360:
   297  14A                     l852:
   298                           
   299                           ;newmain.c: 40:                 first_pulse();
   300  14A  0CBF               	movlw	191
   301  14B  003C               	movwf	btemp
   302  14C  007D               	clrf	btemp+1
   303  14D  021C               	movf	wtemp0,w
   304  14E  0154               	andwf	_flg,w
   305  14F  0034               	movwf	_flg
   306  150  021D               	movf	wtemp0+1,w
   307  151  0155               	andwf	_flg+1,w
   308  152  0035               	movwf	_flg+1
   309                           
   310                           ;newmain.c: 41:             }
   311  153  0C20               	movlw	32
   312  154  003C               	movwf	btemp
   313  155  007D               	clrf	btemp+1
   314  156  021C               	movf	wtemp0,w
   315  157  0114               	iorwf	_flg,w
   316  158  0034               	movwf	_flg
   317  159  021D               	movf	wtemp0+1,w
   318  15A  0115               	iorwf	_flg+1,w
   319  15B  0035               	movwf	_flg+1
   320  15C                     l854:
   321                           
   322                           ;newmain.c: 42: }
   323  15C  0426               	bcf	6,1	;volatile
   324  15D                     l856:
   325                           
   326                           ;newmain.c: 43:         if( flg & 0b10000000){
   327  15D  0C06               	movlw	6
   328  15E  002D               	movwf	??_main+2
   329  15F  0C13               	movlw	19
   330  160  002C               	movwf	??_main+1
   331  161  0CAD               	movlw	173
   332  162  002B               	movwf	??_main
   333  163                     u447:
   334  163  02EB               	decfsz	??_main,f
   335  164  0B63               	goto	u447
   336  165  02EC               	decfsz	??_main+1,f
   337  166  0B63               	goto	u447
   338  167  02ED               	decfsz	??_main+2,f
   339  168  0B63               	goto	u447
   340  169  0B6A               	nop2
   341  16A                     l858:
   342                           
   343                           ;newmain.c: 44:             for(int i=0;i<100;i++){
   344  16A  0909               	fcall	entry__startmotor
   345  16B                     l860:
   346                           
   347                           ;newmain.c: 48: 
   348  16B  0746               	btfss	6,2	;volatile
   349  16C  0B6E               	goto	u371
   350  16D  0B6F               	goto	u370
   351  16E                     u371:
   352  16E  0B83               	goto	l866
   353  16F                     u370:
   354  16F                     l862:
   355                           
   356                           ;newmain.c: 49: }
   357  16F  0C80               	movlw	128
   358  170  003C               	movwf	btemp
   359  171  007D               	clrf	btemp+1
   360  172  021C               	movf	wtemp0,w
   361  173  0114               	iorwf	_flg,w
   362  174  0034               	movwf	_flg
   363  175  021D               	movf	wtemp0+1,w
   364  176  0115               	iorwf	_flg+1,w
   365  177  0035               	movwf	_flg+1
   366                           
   367                           ;newmain.c: 50: }
   368  178  0CBF               	movlw	191
   369  179  003C               	movwf	btemp
   370  17A  007D               	clrf	btemp+1
   371  17B  021C               	movf	wtemp0,w
   372  17C  0154               	andwf	_flg,w
   373  17D  0034               	movwf	_flg
   374  17E  021D               	movf	wtemp0+1,w
   375  17F  0155               	andwf	_flg+1,w
   376  180  0035               	movwf	_flg+1
   377  181                     l864:
   378                           
   379                           ;newmain.c: 51: }
   380  181  0426               	bcf	6,1	;volatile
   381                           
   382                           ;newmain.c: 52: void first_pulse(void) {
   383  182  0B8C               	goto	l868
   384  183                     l866:
   385                           
   386                           ;newmain.c: 54:     for(int i=0;i<50;i++){
   387  183  0C7F               	movlw	127
   388  184  003C               	movwf	btemp
   389  185  007D               	clrf	btemp+1
   390  186  021C               	movf	wtemp0,w
   391  187  0154               	andwf	_flg,w
   392  188  0034               	movwf	_flg
   393  189  021D               	movf	wtemp0+1,w
   394  18A  0155               	andwf	_flg+1,w
   395  18B  0035               	movwf	_flg+1
   396  18C                     l868:
   397                           
   398                           ;newmain.c: 58:         }
   399  18C  0796               	btfss	_flg1,4
   400  18D  0B8F               	goto	u381
   401  18E  0B90               	goto	u380
   402  18F                     u381:
   403  18F  0BD3               	goto	l896
   404  190                     u380:
   405  190                     l870:
   406                           
   407                           ;newmain.c: 59:         else{
   408  190  006E               	clrf	main@i
   409  191  006F               	clrf	main@i+1
   410  192                     l876:
   411                           
   412                           ;newmain.c: 60:            GPIObits.GP0 =0;
   413  192  090A               	fcall	entry__second_pulse
   414  193                     l878:
   415                           
   416                           ;newmain.c: 61:         }
   417  193  0C01               	movlw	1
   418  194  003C               	movwf	btemp
   419  195  007D               	clrf	btemp+1
   420  196  021C               	movf	wtemp0,w
   421  197  01EE               	addwf	main@i,f
   422  198  0603               	skipnc
   423  199  02AF               	incf	main@i+1,f
   424  19A  021D               	movf	wtemp0+1,w
   425  19B  01EF               	addwf	main@i+1,f
   426  19C                     l880:
   427  19C  020F               	movf	main@i+1,w
   428  19D  003F               	movwf	btemp+3
   429  19E  020E               	movf	main@i,w
   430  19F  003E               	movwf	btemp+2
   431  1A0  021F               	movf	wtemp1+1,w
   432  1A1  0F80               	xorlw	128
   433  1A2  003C               	movwf	btemp
   434  1A3  0C80               	movlw	128
   435  1A4  009C               	subwf	btemp,w
   436  1A5  0743               	skipz
   437  1A6  0BA9               	goto	u395
   438  1A7  0C64               	movlw	100
   439  1A8  009E               	subwf	wtemp1,w
   440  1A9                     u395:
   441  1A9  0703               	skipc
   442  1AA  0BAC               	goto	u391
   443  1AB  0BAD               	goto	u390
   444  1AC                     u391:
   445  1AC  0B92               	goto	l876
   446  1AD                     u390:
   447  1AD                     l882:
   448                           
   449                           ;newmain.c: 62:     }
   450  1AD  0C82               	movlw	130
   451  1AE  002C               	movwf	??_main+1
   452  1AF  0CDD               	movlw	221
   453  1B0  002B               	movwf	??_main
   454  1B1                     u457:
   455  1B1  02EB               	decfsz	??_main,f
   456  1B2  0BB1               	goto	u457
   457  1B3  02EC               	decfsz	??_main+1,f
   458  1B4  0BB1               	goto	u457
   459  1B5  0BB6               	nop2
   460  1B6                     l884:
   461                           
   462                           ;newmain.c: 63:     for(int i=50;i>=0;i--){
   463  1B6  0070               	clrf	main@i_73
   464  1B7  0071               	clrf	main@i_73+1
   465  1B8                     l890:
   466                           
   467                           ;newmain.c: 64:         if(35>i)
   468  1B8  090B               	fcall	entry__first_pulse
   469  1B9                     l892:
   470                           
   471                           ;newmain.c: 65:         {
   472  1B9  0C01               	movlw	1
   473  1BA  003C               	movwf	btemp
   474  1BB  007D               	clrf	btemp+1
   475  1BC  021C               	movf	wtemp0,w
   476  1BD  01F0               	addwf	main@i_73,f
   477  1BE  0603               	skipnc
   478  1BF  02B1               	incf	main@i_73+1,f
   479  1C0  021D               	movf	wtemp0+1,w
   480  1C1  01F1               	addwf	main@i_73+1,f
   481  1C2                     l894:
   482  1C2  0211               	movf	main@i_73+1,w
   483  1C3  003F               	movwf	btemp+3
   484  1C4  0210               	movf	main@i_73,w
   485  1C5  003E               	movwf	btemp+2
   486  1C6  021F               	movf	wtemp1+1,w
   487  1C7  0F80               	xorlw	128
   488  1C8  003C               	movwf	btemp
   489  1C9  0C80               	movlw	128
   490  1CA  009C               	subwf	btemp,w
   491  1CB  0743               	skipz
   492  1CC  0BCF               	goto	u405
   493  1CD  0CFA               	movlw	250
   494  1CE  009E               	subwf	wtemp1,w
   495  1CF                     u405:
   496  1CF  0703               	skipc
   497  1D0  0BD2               	goto	u401
   498  1D1  0BD3               	goto	u400
   499  1D2                     u401:
   500  1D2  0BB8               	goto	l890
   501  1D3                     u400:
   502  1D3                     l896:
   503                           
   504                           ;newmain.c: 67:         }
   505  1D3  07F4               	btfss	_flg,7
   506  1D4  0BD6               	goto	u411
   507  1D5  0BD7               	goto	u410
   508  1D6                     u411:
   509  1D6  0B1E               	goto	l832
   510  1D7                     u410:
   511  1D7                     l898:
   512                           
   513                           ;newmain.c: 68:         else
   514  1D7  0072               	clrf	main@i_74
   515  1D8  0073               	clrf	main@i_74+1
   516  1D9                     l904:
   517                           
   518                           ;newmain.c: 69:         {
   519  1D9  090A               	fcall	entry__second_pulse
   520  1DA                     l906:
   521                           
   522                           ;newmain.c: 70:             GPIObits.GP0 =0;
   523  1DA  0C01               	movlw	1
   524  1DB  003C               	movwf	btemp
   525  1DC  007D               	clrf	btemp+1
   526  1DD  021C               	movf	wtemp0,w
   527  1DE  01F2               	addwf	main@i_74,f
   528  1DF  0603               	skipnc
   529  1E0  02B3               	incf	main@i_74+1,f
   530  1E1  021D               	movf	wtemp0+1,w
   531  1E2  01F3               	addwf	main@i_74+1,f
   532  1E3                     l908:
   533  1E3  0213               	movf	main@i_74+1,w
   534  1E4  003F               	movwf	btemp+3
   535  1E5  0212               	movf	main@i_74,w
   536  1E6  003E               	movwf	btemp+2
   537  1E7  021F               	movf	wtemp1+1,w
   538  1E8  0F80               	xorlw	128
   539  1E9  003C               	movwf	btemp
   540  1EA  0C80               	movlw	128
   541  1EB  009C               	subwf	btemp,w
   542  1EC  0743               	skipz
   543  1ED  0BF0               	goto	u425
   544  1EE  0C64               	movlw	100
   545  1EF  009E               	subwf	wtemp1,w
   546  1F0                     u425:
   547  1F0  0703               	skipc
   548  1F1  0BF3               	goto	u421
   549  1F2  0BF4               	goto	u420
   550  1F3                     u421:
   551  1F3  0BD9               	goto	l904
   552  1F4                     u420:
   553  1F4                     l910:
   554                           
   555                           ;newmain.c: 71:         }
   556  1F4  0C82               	movlw	130
   557  1F5  002C               	movwf	??_main+1
   558  1F6  0CDD               	movlw	221
   559  1F7  002B               	movwf	??_main
   560  1F8                     u467:
   561  1F8  02EB               	decfsz	??_main,f
   562  1F9  0BF8               	goto	u467
   563  1FA  02EC               	decfsz	??_main+1,f
   564  1FB  0BF8               	goto	u467
   565  1FC  0BFD               	nop2
   566  1FD  0B1E               	goto	l832
   567  1FE  0A00               	ljmp	start
   568  1FF                     __end_of_main:
   569                           
   570                           	psect	text1
   571  01D                     __ptext1:	
   572 ;; *************** function _startmotor *****************
   573 ;; Defined at:
   574 ;;		line 124 in file "newmain.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;		None
   577 ;; Auto vars:     Size  Location     Type
   578 ;;		None
   579 ;; Return value:  Size  Location     Type
   580 ;;                  1    8[None  ] void 
   581 ;; Registers used:
   582 ;;		wreg, fsr0l, fsr0h, btemp+0, btemp+1
   583 ;; Tracked objects:
   584 ;;		On entry : 0/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMMON   BANK0
   588 ;;      Params:         0       0
   589 ;;      Locals:         0       0
   590 ;;      Temps:          0       3
   591 ;;      Totals:         0       3
   592 ;;Total ram usage:        3 bytes
   593 ;; Hardware stack levels used: 1
   594 ;; This function calls:
   595 ;;		Nothing
   596 ;; This function is called by:
   597 ;;		_main
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601                           
   602                           ;psect for function _startmotor
   603  01D                     _startmotor:
   604  01D                     l744:
   605  01D  0C40               	movlw	64
   606  01E  003C               	movwf	btemp
   607  01F  007D               	clrf	btemp+1
   608  020  021C               	movf	wtemp0,w
   609  021  0114               	iorwf	_flg,w
   610  022  0034               	movwf	_flg
   611  023  021D               	movf	wtemp0+1,w
   612  024  0115               	iorwf	_flg+1,w
   613  025  0035               	movwf	_flg+1
   614  026                     l746:
   615  026  0526               	bsf	6,1	;volatile
   616  027                     l748:
   617  027  0CB2               	movlw	178
   618  028  0029               	movwf	??_startmotor+2
   619  029  0C8F               	movlw	143
   620  02A  0028               	movwf	??_startmotor+1
   621  02B  0C13               	movlw	19
   622  02C  0027               	movwf	??_startmotor
   623  02D                     u477:
   624  02D  02E7               	decfsz	??_startmotor,f
   625  02E  0A2D               	goto	u477
   626  02F  02E8               	decfsz	??_startmotor+1,f
   627  030  0A2D               	goto	u477
   628  031  02E9               	decfsz	??_startmotor+2,f
   629  032  0A2D               	goto	u477
   630  033                     l750:
   631  033  07A6               	btfss	6,5	;volatile
   632  034  0A36               	goto	u221
   633  035  0A37               	goto	u220
   634  036                     u221:
   635  036  0A5D               	goto	l760
   636  037                     u220:
   637  037                     l752:
   638  037  0CBF               	movlw	191
   639  038  003C               	movwf	btemp
   640  039  007D               	clrf	btemp+1
   641  03A  021C               	movf	wtemp0,w
   642  03B  0154               	andwf	_flg,w
   643  03C  0034               	movwf	_flg
   644  03D  021D               	movf	wtemp0+1,w
   645  03E  0155               	andwf	_flg+1,w
   646  03F  0035               	movwf	_flg+1
   647  040  0C20               	movlw	32
   648  041  003C               	movwf	btemp
   649  042  007D               	clrf	btemp+1
   650  043  021C               	movf	wtemp0,w
   651  044  0114               	iorwf	_flg,w
   652  045  0034               	movwf	_flg
   653  046  021D               	movf	wtemp0+1,w
   654  047  0115               	iorwf	_flg+1,w
   655  048  0035               	movwf	_flg+1
   656  049                     l754:
   657  049  0426               	bcf	6,1	;volatile
   658  04A                     l756:
   659  04A  0403               	clrc
   660  04B  0356               	rlf	_flg1,w
   661  04C  0036               	movwf	_flg1
   662  04D  0357               	rlf	_flg1+1,w
   663  04E  0037               	movwf	_flg1+1
   664  04F                     l758:
   665  04F  0C33               	movlw	51
   666  050  0029               	movwf	??_startmotor+2
   667  051  0CBB               	movlw	187
   668  052  0028               	movwf	??_startmotor+1
   669  053  0CDF               	movlw	223
   670  054  0027               	movwf	??_startmotor
   671  055                     u487:
   672  055  02E7               	decfsz	??_startmotor,f
   673  056  0A55               	goto	u487
   674  057  02E8               	decfsz	??_startmotor+1,f
   675  058  0A55               	goto	u487
   676  059  02E9               	decfsz	??_startmotor+2,f
   677  05A  0A55               	goto	u487
   678  05B  0A5C               	nop2
   679  05C  0A6A               	goto	l66
   680  05D                     l760:
   681  05D  0C06               	movlw	6
   682  05E  0036               	movwf	_flg1
   683  05F  0C00               	movlw	0
   684  060  0037               	movwf	_flg1+1
   685  061                     l762:
   686  061  0CDF               	movlw	223
   687  062  003C               	movwf	btemp
   688  063  007D               	clrf	btemp+1
   689  064  021C               	movf	wtemp0,w
   690  065  0154               	andwf	_flg,w
   691  066  0034               	movwf	_flg
   692  067  021D               	movf	wtemp0+1,w
   693  068  0155               	andwf	_flg+1,w
   694  069  0035               	movwf	_flg+1
   695  06A                     l66:
   696  06A  0800               	retlw	0
   697  06B                     __end_of_startmotor:
   698                           
   699                           	psect	jmp_tab
   700  009                     __pjmp_tab:	
   701                           ;incstack = 0
   702                           ; Regs used in _startmotor: [wreg-fsr0h+btemp+0+btemp+1]
   703                           
   704  009                     entry__startmotor:
   705  009  0A1D               	ljmp	_startmotor
   706  00A                     entry__second_pulse:	
   707                           ;incstack = 0
   708                           ; Regs used in _second_pulse: [wreg-fsr0h+status,2+btemp+0-btemp+3]
   709                           
   710  00A  0AC2               	ljmp	_second_pulse
   711  00B                     entry__first_pulse:	
   712                           ;incstack = 0
   713                           ; Regs used in _first_pulse: [wreg-fsr0h+status,2+btemp+0-btemp+3]
   714                           
   715  00B  0A6B               	ljmp	_first_pulse
   716                           
   717                           	psect	text2
   718  0C2                     __ptext2:	
   719 ;; *************** function _second_pulse *****************
   720 ;; Defined at:
   721 ;;		line 99 in file "newmain.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;		None
   724 ;; Auto vars:     Size  Location     Type
   725 ;;  i               2    2[BANK0 ] int 
   726 ;;  i               2    0[BANK0 ] int 
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1   12[None  ] void 
   729 ;; Registers used:
   730 ;;		wreg, fsr0l, fsr0h, status,2, btemp+0, btemp+1, btemp+2, btemp+3
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMMON   BANK0
   736 ;;      Params:         0       0
   737 ;;      Locals:         0       4
   738 ;;      Temps:          0       0
   739 ;;      Totals:         0       4
   740 ;;Total ram usage:        4 bytes
   741 ;; Hardware stack levels used: 1
   742 ;; This function calls:
   743 ;;		Nothing
   744 ;; This function is called by:
   745 ;;		_main
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           
   750                           ;psect for function _second_pulse
   751  0C2                     _second_pulse:
   752  0C2                     l764:
   753                           
   754                           ;newmain.c: 101: 
   755  0C2  0067               	clrf	second_pulse@i
   756  0C3  0068               	clrf	second_pulse@i+1
   757  0C4                     l770:
   758                           
   759                           ;newmain.c: 102:             flg = flg | 0b01000000;;newmain.c: 103:             GPIObit
      +                          s.GP1 = 1;
   760  0C4  0208               	movf	second_pulse@i+1,w
   761  0C5  003F               	movwf	btemp+3
   762  0C6  0207               	movf	second_pulse@i,w
   763  0C7  003E               	movwf	btemp+2
   764  0C8  021F               	movf	wtemp1+1,w
   765  0C9  0F80               	xorlw	128
   766  0CA  003C               	movwf	btemp
   767  0CB  0C80               	movlw	128
   768  0CC  009C               	subwf	btemp,w
   769  0CD  0743               	skipz
   770  0CE  0AD1               	goto	u235
   771  0CF  0C14               	movlw	20
   772  0D0  009E               	subwf	wtemp1,w
   773  0D1                     u235:
   774  0D1  0603               	skipnc
   775  0D2  0AD4               	goto	u231
   776  0D3  0AD5               	goto	u230
   777  0D4                     u231:
   778  0D4  0AD7               	goto	l774
   779  0D5                     u230:
   780  0D5                     l772:
   781                           
   782                           ;newmain.c: 104:             _delay((unsigned long)((35000)*(4000000/4000.0)));;newmain.
      +                          c: 105:             if(GPIObits.GP5 == 1 ){
   783  0D5  0506               	bsf	6,0	;volatile
   784                           
   785                           ;newmain.c: 106:                 flg = flg & 0b10111111;
   786  0D6  0AD8               	goto	l776
   787  0D7                     l774:
   788                           
   789                           ;newmain.c: 108:                     GPIObits.GP1 = 0;;newmain.c: 109:                  
      +                             flg1 = flg1 <<1;
   790  0D7  0406               	bcf	6,0	;volatile
   791  0D8                     l776:
   792                           
   793                           ;newmain.c: 111:             }
   794  0D8  0C01               	movlw	1
   795  0D9  003C               	movwf	btemp
   796  0DA  007D               	clrf	btemp+1
   797  0DB  021C               	movf	wtemp0,w
   798  0DC  01E7               	addwf	second_pulse@i,f
   799  0DD  0603               	skipnc
   800  0DE  02A8               	incf	second_pulse@i+1,f
   801  0DF  021D               	movf	wtemp0+1,w
   802  0E0  01E8               	addwf	second_pulse@i+1,f
   803  0E1                     l778:
   804  0E1  0208               	movf	second_pulse@i+1,w
   805  0E2  003F               	movwf	btemp+3
   806  0E3  0207               	movf	second_pulse@i,w
   807  0E4  003E               	movwf	btemp+2
   808  0E5  021F               	movf	wtemp1+1,w
   809  0E6  0F80               	xorlw	128
   810  0E7  003C               	movwf	btemp
   811  0E8  0C80               	movlw	128
   812  0E9  009C               	subwf	btemp,w
   813  0EA  0743               	skipz
   814  0EB  0AEE               	goto	u245
   815  0EC  0C32               	movlw	50
   816  0ED  009E               	subwf	wtemp1,w
   817  0EE                     u245:
   818  0EE  0703               	skipc
   819  0EF  0AF1               	goto	u241
   820  0F0  0AF2               	goto	u240
   821  0F1                     u241:
   822  0F1  0AC4               	goto	l770
   823  0F2                     u240:
   824  0F2                     l780:
   825                           
   826                           ;newmain.c: 112:             else{
   827  0F2  0C32               	movlw	50
   828  0F3  0029               	movwf	second_pulse@i_80
   829  0F4  0C00               	movlw	0
   830  0F5  002A               	movwf	second_pulse@i_80+1
   831  0F6                     l786:
   832                           
   833                           ;newmain.c: 113:                 flg1 = 0b00000110;;newmain.c: 114:                 flg 
      +                          = flg & 0b11011111;
   834  0F6  020A               	movf	second_pulse@i_80+1,w
   835  0F7  003F               	movwf	btemp+3
   836  0F8  0209               	movf	second_pulse@i_80,w
   837  0F9  003E               	movwf	btemp+2
   838  0FA  021F               	movf	wtemp1+1,w
   839  0FB  0F80               	xorlw	128
   840  0FC  003C               	movwf	btemp
   841  0FD  0C80               	movlw	128
   842  0FE  009C               	subwf	btemp,w
   843  0FF  0743               	skipz
   844  100  0B03               	goto	u255
   845  101  0C14               	movlw	20
   846  102  009E               	subwf	wtemp1,w
   847  103                     u255:
   848  103  0603               	skipnc
   849  104  0B06               	goto	u251
   850  105  0B07               	goto	u250
   851  106                     u251:
   852  106  0B09               	goto	l790
   853  107                     u250:
   854  107                     l788:
   855                           
   856                           ;newmain.c: 115:             };newmain.c: 116: 
   857  107  0506               	bsf	6,0	;volatile
   858                           
   859                           ;newmain.c: 117:  }
   860  108  0B0A               	goto	l792
   861  109                     l790:
   862  109  0406               	bcf	6,0	;volatile
   863  10A                     l792:
   864  10A  0CFF               	movlw	255
   865  10B  003C               	movwf	btemp
   866  10C  0CFF               	movlw	255
   867  10D  003D               	movwf	btemp+1
   868  10E  021C               	movf	wtemp0,w
   869  10F  01E9               	addwf	second_pulse@i_80,f
   870  110  0603               	skipnc
   871  111  02AA               	incf	second_pulse@i_80+1,f
   872  112  021D               	movf	wtemp0+1,w
   873  113  01EA               	addwf	second_pulse@i_80+1,f
   874  114                     l794:
   875  114  07EA               	btfss	second_pulse@i_80+1,7
   876  115  0B17               	goto	u261
   877  116  0B18               	goto	u260
   878  117                     u261:
   879  117  0AF6               	goto	l786
   880  118                     u260:
   881  118                     l61:
   882  118  0800               	retlw	0
   883  119                     __end_of_second_pulse:
   884                           
   885                           	psect	text3
   886  06B                     __ptext3:	
   887 ;; *************** function _first_pulse *****************
   888 ;; Defined at:
   889 ;;		line 76 in file "newmain.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;		None
   892 ;; Auto vars:     Size  Location     Type
   893 ;;  i               2    2[BANK0 ] int 
   894 ;;  i               2    0[BANK0 ] int 
   895 ;; Return value:  Size  Location     Type
   896 ;;                  1   14[None  ] void 
   897 ;; Registers used:
   898 ;;		wreg, fsr0l, fsr0h, status,2, btemp+0, btemp+1, btemp+2, btemp+3
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMMON   BANK0
   904 ;;      Params:         0       0
   905 ;;      Locals:         0       4
   906 ;;      Temps:          0       0
   907 ;;      Totals:         0       4
   908 ;;Total ram usage:        4 bytes
   909 ;; Hardware stack levels used: 1
   910 ;; This function calls:
   911 ;;		Nothing
   912 ;; This function is called by:
   913 ;;		_main
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           
   918                           ;psect for function _first_pulse
   919  06B                     _first_pulse:
   920  06B                     l796:
   921                           
   922                           ;newmain.c: 78:     {
   923  06B  0067               	clrf	first_pulse@i
   924  06C  0068               	clrf	first_pulse@i+1
   925  06D                     l802:
   926                           
   927                           ;newmain.c: 80:         {
   928  06D  0208               	movf	first_pulse@i+1,w
   929  06E  003F               	movwf	btemp+3
   930  06F  0207               	movf	first_pulse@i,w
   931  070  003E               	movwf	btemp+2
   932  071  021F               	movf	wtemp1+1,w
   933  072  0F80               	xorlw	128
   934  073  003C               	movwf	btemp
   935  074  0C80               	movlw	128
   936  075  009C               	subwf	btemp,w
   937  076  0743               	skipz
   938  077  0A7A               	goto	u275
   939  078  0C23               	movlw	35
   940  079  009E               	subwf	wtemp1,w
   941  07A                     u275:
   942  07A  0603               	skipnc
   943  07B  0A7D               	goto	u271
   944  07C  0A7E               	goto	u270
   945  07D                     u271:
   946  07D  0A80               	goto	l806
   947  07E                     u270:
   948  07E                     l804:
   949                           
   950                           ;newmain.c: 81:             GPIObits.GP0 =1;
   951  07E  0506               	bsf	6,0	;volatile
   952                           
   953                           ;newmain.c: 82:         }
   954  07F  0A81               	goto	l808
   955  080                     l806:
   956                           
   957                           ;newmain.c: 84:         {
   958  080  0406               	bcf	6,0	;volatile
   959  081                     l808:
   960                           
   961                           ;newmain.c: 86:         }
   962  081  0C01               	movlw	1
   963  082  003C               	movwf	btemp
   964  083  007D               	clrf	btemp+1
   965  084  021C               	movf	wtemp0,w
   966  085  01E7               	addwf	first_pulse@i,f
   967  086  0603               	skipnc
   968  087  02A8               	incf	first_pulse@i+1,f
   969  088  021D               	movf	wtemp0+1,w
   970  089  01E8               	addwf	first_pulse@i+1,f
   971  08A                     l810:
   972  08A  0208               	movf	first_pulse@i+1,w
   973  08B  003F               	movwf	btemp+3
   974  08C  0207               	movf	first_pulse@i,w
   975  08D  003E               	movwf	btemp+2
   976  08E  021F               	movf	wtemp1+1,w
   977  08F  0F80               	xorlw	128
   978  090  003C               	movwf	btemp
   979  091  0C80               	movlw	128
   980  092  009C               	subwf	btemp,w
   981  093  0743               	skipz
   982  094  0A97               	goto	u285
   983  095  0C32               	movlw	50
   984  096  009E               	subwf	wtemp1,w
   985  097                     u285:
   986  097  0703               	skipc
   987  098  0A9A               	goto	u281
   988  099  0A9B               	goto	u280
   989  09A                     u281:
   990  09A  0A6D               	goto	l802
   991  09B                     u280:
   992  09B                     l812:
   993                           
   994                           ;newmain.c: 87:     }
   995  09B  0C32               	movlw	50
   996  09C  0029               	movwf	first_pulse@i_77
   997  09D  0C00               	movlw	0
   998  09E  002A               	movwf	first_pulse@i_77+1
   999  09F                     l818:
  1000                           
  1001                           ;newmain.c: 88:     for(int i=50;i>=0;i--)
  1002  09F  020A               	movf	first_pulse@i_77+1,w
  1003  0A0  003F               	movwf	btemp+3
  1004  0A1  0209               	movf	first_pulse@i_77,w
  1005  0A2  003E               	movwf	btemp+2
  1006  0A3  021F               	movf	wtemp1+1,w
  1007  0A4  0F80               	xorlw	128
  1008  0A5  003C               	movwf	btemp
  1009  0A6  0C80               	movlw	128
  1010  0A7  009C               	subwf	btemp,w
  1011  0A8  0743               	skipz
  1012  0A9  0AAC               	goto	u295
  1013  0AA  0C23               	movlw	35
  1014  0AB  009E               	subwf	wtemp1,w
  1015  0AC                     u295:
  1016  0AC  0603               	skipnc
  1017  0AD  0AAF               	goto	u291
  1018  0AE  0AB0               	goto	u290
  1019  0AF                     u291:
  1020  0AF  0AB2               	goto	l822
  1021  0B0                     u290:
  1022  0B0                     l820:
  1023                           
  1024                           ;newmain.c: 89:     {;newmain.c: 90:         if(20>i)
  1025  0B0  0506               	bsf	6,0	;volatile
  1026                           
  1027                           ;newmain.c: 91:         {
  1028  0B1  0AB3               	goto	l824
  1029  0B2                     l822:
  1030                           
  1031                           ;newmain.c: 93:         };newmain.c: 94:         else
  1032  0B2  0406               	bcf	6,0	;volatile
  1033  0B3                     l824:
  1034                           
  1035                           ;newmain.c: 96:             GPIObits.GP0 =0;
  1036  0B3  0CFF               	movlw	255
  1037  0B4  003C               	movwf	btemp
  1038  0B5  0CFF               	movlw	255
  1039  0B6  003D               	movwf	btemp+1
  1040  0B7  021C               	movf	wtemp0,w
  1041  0B8  01E9               	addwf	first_pulse@i_77,f
  1042  0B9  0603               	skipnc
  1043  0BA  02AA               	incf	first_pulse@i_77+1,f
  1044  0BB  021D               	movf	wtemp0+1,w
  1045  0BC  01EA               	addwf	first_pulse@i_77+1,f
  1046  0BD                     l826:
  1047  0BD  07EA               	btfss	first_pulse@i_77+1,7
  1048  0BE  0AC0               	goto	u301
  1049  0BF  0AC1               	goto	u300
  1050  0C0                     u301:
  1051  0C0  0A9F               	goto	l818
  1052  0C1                     u300:
  1053  0C1                     l50:
  1054  0C1  0800               	retlw	0
  1055  0C2                     __end_of_first_pulse:
  1056  001C                     btemp	set	28	;btemp
  1057  001C                     wtemp0	set	28
  1058  001E                     wtemp1	set	30
  1059  001C                     ttemp0	set	28
  1060  001C                     ltemp0	set	28
  1061                           
  1062                           	psect	config
  1063                           
  1064                           ;Config register CONFIG @ 0xFFF
  1065                           ;	Oscillator Selection bits
  1066                           ;	OSC = IntRC, internal RC oscillator
  1067                           ;	Watchdog Timer Enable bit
  1068                           ;	WDT = OFF, WDT disabled
  1069                           ;	Code Protection bit
  1070                           ;	CP = OFF, Code protection off
  1071                           ;	GP3/MCLR Pin Function Select bit
  1072                           ;	MCLRE = OFF, GP3/MCLR pin function is digital input, MCLR internally tied to VDD
  1073  0FFF                     	org	4095
  1074  0FFF  0FEA               	dw	4074

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            23     13      17

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_first_pulse
    _main->_second_pulse

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     410
                                              4 BANK0      9     9      0
                        _first_pulse
                       _second_pulse
                         _startmotor
 ---------------------------------------------------------------------------------
 (1) _startmotor                                           3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _second_pulse                                         4     4      0     136
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _first_pulse                                          4     4      0     136
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _first_pulse
   _second_pulse
   _startmotor

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
STACK                0      0       0       2        0.0%
BANK0               17      D      11       3       73.9%
ABS                  0      0      11       4        0.0%
BITBANK0            17      0       0       5        0.0%
DATA                 0      0      11       6        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jul 09 00:17:07 2021

                     l50 00C1                       l61 0118                       l66 006A  
                     fsr 0004                      l810 008A                      l802 006D  
                    l820 00B0                      l812 009B                      l804 007E  
                    l822 00B2                      l806 0080                      l750 0033  
                    l910 01F4                      l830 011D                      l824 00B3  
                    l808 0081                      l752 0037                      l760 005D  
                    l744 001D                      l904 01D9                      l840 012B  
                    l832 011E                      l826 00BD                      l818 009F  
                    l770 00C4                      l762 0061                      l754 0049  
                    l746 0026                      l906 01DA                      l850 0146  
                    l842 012F                      l834 0122                      l780 00F2  
                    l772 00D5                      l764 00C2                      l756 004A  
                    l748 0027                      l908 01E3                      l852 014A  
                    l860 016B                      l844 0138                      l836 0126  
                    l828 0119                      l790 0109                      l774 00D7  
                    l758 004F                      l870 0190                      l862 016F  
                    l854 015C                      l846 0139                      l838 012A  
                    l792 010A                      l776 00D8                      l880 019C  
                    l864 0181                      l856 015D                      l848 0142  
                    l794 0114                      l786 00F6                      l778 00E1  
                    l890 01B8                      l882 01AD                      l866 0183  
                    l858 016A                      l796 006B                      l788 0107  
                    l892 01B9                      l884 01B6                      l876 0192  
                    l868 018C                      l894 01C2                      l878 0193  
                    l896 01D3                      l898 01D7                      u300 00C1  
                    u220 0037                      u301 00C0                      u221 0036  
                    u230 00D5                      u310 0122                      u231 00D4  
                    u311 0121                      u240 00F2                      u400 01D3  
                    u320 0126                      u241 00F1                      u401 01D2  
                    u321 0125                      u250 0107                      u410 01D7  
                    u330 012A                      u251 0106                      u235 00D1  
                    u411 01D6                      u331 0129                      u260 0118  
                    u420 01F4                      u340 012F                      u261 0117  
                    u245 00EE                      u421 01F3                      u405 01CF  
                    u341 012E                      u270 007E                      u350 0146  
                    u271 007D                      u255 0103                      u351 0145  
                    u280 009B                      u360 014A                      u281 009A  
                    u425 01F0                      u361 0149                      u290 00B0  
                    u370 016F                      u291 00AF                      u275 007A  
                    u371 016E                      u380 0190                      u285 0097  
                    u381 018F                      u437 013D                      u390 01AD  
                    u295 00AC                      u391 01AC                      u447 0163  
                    u457 01B1                      u467 01F8                      u395 01A9  
                    u477 002D                      u487 0055                      _flg 0014  
                   _flg1 0016                     _main 0119                     btemp 001C  
           ?_first_pulse 0007                     start 0000                    ?_main 0007  
                  main@i 000E                    ltemp0 001C                    ttemp0 001C  
                  wtemp0 001C                    wtemp1 001E          __initialization 0001  
           __end_of_main 01FF                   ??_main 000B                   _OPTION 0000  
__end_of__initialization 0007     __size_of_first_pulse 0057           __pcstackCOMMON 0000  
           __pidataBANK0 000C             first_pulse@i 0007               __pbssBANK0 0014  
          ?_second_pulse 0007        entry__first_pulse 000B               __pmaintext 0119  
        first_pulse@i_77 0009           ??_second_pulse 0000                  __ptext1 001D  
                __ptext2 00C2                  __ptext3 006B            second_pulse@i 0007  
   end_of_initialization 0007         second_pulse@i_80 0009               _startmotor 001D  
   __end_of_second_pulse 0119      start_initialization 0001            ??_first_pulse 0000  
            __pdataBANK0 0016                ___latbits 0000            __pcstackBANK0 0007  
            ?_startmotor 0007                __pjmp_tab 0009      __end_of_first_pulse 00C2  
               _GPIObits 0006    __size_of_second_pulse 0057                 _TRISGPIO 0006  
    __size_of_startmotor 004E         entry__startmotor 0009              _first_pulse 006B  
           _second_pulse 00C2            __size_of_main 00E6       entry__second_pulse 000A  
               main@i_73 0010                 main@i_74 0012             ??_startmotor 0007  
     __end_of_startmotor 006B  
